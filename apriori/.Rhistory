library(arules)
library(arulesViz)
dados <- read.csv("base_unificada_nigeria.csv", stringsAsFactors = TRUE)
setwd("C:/Users/Fernando/Desktop/SPTech/4º Ano/TCC/Repo GitHub/TCC_2024/apriori")
dados <- read.csv("base_unificada_nigeria.csv", stringsAsFactors = TRUE)
dados_selecionados <- dados[, !(names(dados) %in% c("Local", "Ano"))]
dados_transacoes <- as(dados_selecionados, "transactions")
regras <- apriori(dados_transacoes, parameter = list(supp = 0.01, conf = 0.8))
inspect(regras)
plot(regras, method = "graph", engine = "igraph", control = list(type = "items"))
regras_filtradas <- subset(regras, subset = confidence > 0.8 & support > 0.05)
plot(regras_filtradas, method = "graph", engine = "igraph")
plot(regras_filtradas, method = "graph", engine = "igraph", control = list(k = 10))
plot(regras_filtradas, method = "graph", engine = "igraph", control = list(max = 5))
plot(regras, method = "scatterplot", measure = c("support", "confidence"), shading = "lift")
regras_filtradas <- subset(regras, subset = confidence > 0.8 & support > 0.05)
plot(regras_filtradas, method = "scatterplot", measure = c("support", "confidence"), shading = "lift")
plot(regras, method = "graph", engine = "igraph", control = list(type = "items"))
library(arules)
library(arulesViz)
dados <- read.csv("base_unificada_nigeria.csv", stringsAsFactors = TRUE)
dados_selecionados <- dados[, !(names(dados) %in% c("Local", "Ano"))]
dados_transacoes <- as(dados_selecionados, "transactions")
regras <- apriori(dados_transacoes, parameter = list(supp = 0.01, conf = 0.8))
regras_ordenadas <- sort(regras, by = "confidence", decreasing = TRUE)
regras_filtradas <- subset(regras_ordenadas, subset = confidence > 0.8 & support > 0.05)
plot(regras, method = "scatterplot", measure = c("support", "confidence"), shading = "lift")
plot(regras_filtradas, method = "scatterplot", measure = c("support", "confidence"), shading = "lift")
plot(regras_filtradas, method = "scatterplot", measure = c("support", "confidence"), shading = "lift", control = list(max = 10)))
regras_filtradas <- subset(regras_ordenadas, subset = confidence > 0.8 & support > 0.05, control = list(max = 50)))
library(arules)
library(arulesViz)
dados <- read.csv("base_unificada_nigeria.csv", stringsAsFactors = TRUE)
dados_selecionados <- dados[, !(names(dados) %in% c("Local", "Ano"))]
dados_transacoes <- as(dados_selecionados, "transactions")
regras <- apriori(dados_transacoes, parameter = list(supp = 0.01, conf = 0.8))
regras_ordenadas <- sort(regras, by = "confidence", decreasing = TRUE)
n <- 10  # Número desejado de regras
regras_filtradas <- regras_ordenadas[1:n]
inspect(regras_filtradas)
plot(regras_filtradas, method = "scatterplot", measure = c("support", "confidence"), shading = "lift")
plot(regras_filtradas, method = "graph", engine = "igraph", control = list(type = "items"))
plot(regras_filtradas, method = "matrix", measure = "lift", shading = "confidence")
plot(regras_filtradas, method = "grouped")
plot(regras_filtradas, method = "paracoord", control = list(reorder = TRUE))
plot(regras_filtradas, method = "graph", engine = "igraph")
plot(regras_filtradas, method = "graph", control = list(type = "items"))
library(arules)
library(arulesViz)
dados <- read.csv("base_unificada_com_casos.csv", stringsAsFactors = TRUE)
dados_selecionados <- dados[, !(names(dados) %in% c("Local", "Ano"))]
dados_transacoes <- as(dados_selecionados, "transactions")
regras <- apriori(dados_transacoes, parameter = list(supp = 0.02, conf = 0.9))
regras_ordenadas <- sort(regras, by = "confidence", decreasing = TRUE)
n <- 10  # Número desejado de regras
regras_filtradas <- regras_ordenadas[1:n]
inspect(regras_filtradas)
plot(regras_filtradas, method = "graph", control = list(type = "items"))
library(arules)
library(arulesViz)
dados <- read.csv("base_unificada_com_casos.csv", stringsAsFactors = TRUE)
dados_selecionados <- dados[, !(names(dados) %in% c("Local", "Ano"))]
dados_transacoes <- as(dados_selecionados, "transactions")
regras <- apriori(dados_transacoes, parameter = list(supp = 0.02, conf = 0.9))
regras_ordenadas <- sort(regras, by = "confidence", decreasing = TRUE)
n <- 5  # Número desejado de regras
regras_filtradas <- regras_ordenadas[1:n]
inspect(regras_filtradas)
plot(regras_filtradas, method = "graph", control = list(type = "items"))
library(arules)
library(arulesViz)
dados <- read.csv("base_unificada_com_casos.csv", stringsAsFactors = TRUE)
dados_selecionados <- dados[, !(names(dados) %in% c("Local", "Ano", 'Numero de Casos'))]
dados_transacoes <- as(dados_selecionados, "transactions")
regras <- apriori(dados_transacoes, parameter = list(supp = 0.02, conf = 0.9))
regras_ordenadas <- sort(regras, by = "confidence", decreasing = TRUE)
n <- 5  # Número desejado de regras
regras_filtradas <- regras_ordenadas[1:n]
inspect(regras_filtradas)
plot(regras_filtradas, method = "graph", control = list(type = "items"))
library(arules)
library(arulesViz)
dados <- read.csv("base_unificada_com_casos.csv", stringsAsFactors = TRUE)
dados_selecionados <- dados[, !(names(dados) %in% c("Local", "Ano", 'Numero de Casos'))]
dados_transacoes <- as(dados_selecionados, "transactions")
regras <- apriori(dados_transacoes, parameter = list(supp = 0.02, conf = 0.9))
regras_ordenadas <- sort(regras, by = "lift", decreasing = TRUE)
n <- 5  # Número desejado de regras
regras_filtradas <- regras_ordenadas[1:n]
inspect(regras_filtradas)
plot(regras_filtradas, method = "graph", control = list(type = "items"))
library(arules)
library(arulesViz)
dados <- read.csv("base_unificada_com_casos.csv", stringsAsFactors = TRUE)
dados_selecionados <- dados[, !(names(dados) %in% c("Local", "Ano", 'Numero de Casos'))]
dados_transacoes <- as(dados_selecionados, "transactions")
regras <- apriori(dados_transacoes, parameter = list(supp = 0.02, conf = 0.9))
regras_ordenadas <- sort(regras, by = "support", decreasing = TRUE)
n <- 5  # Número desejado de regras
regras_filtradas <- regras_ordenadas[1:n]
inspect(regras_filtradas)
plot(regras_filtradas, method = "graph", control = list(type = "items"))
library(arules)
library(arulesViz)
dados <- read.csv("base_unificada_com_casos.csv", stringsAsFactors = TRUE)
dados_selecionados <- dados[, !(names(dados) %in% c("Local", "Ano", "Numero de Casos"))]
dados_transacoes <- as(dados_selecionados, "transactions")
regras <- apriori(dados_transacoes, parameter = list(supp = 0.02, conf = 0.9))
regras_ordenadas <- sort(regras, by = "support", decreasing = TRUE)
n <- 5  # Número desejado de regras
regras_filtradas <- regras_ordenadas[1:n]
inspect(regras_filtradas)
plot(regras_filtradas, method = "graph", control = list(type = "items"))
# Instalar e carregar pacotes necessários
install.packages("arules")
install.packages("arulesViz")
library(arules)
library(arulesViz)
# Carregar a base de dados em CSV
dados <- read.csv("base_unificada_com_casos.csv", stringsAsFactors = TRUE)
# Remover as colunas "Local", "Ano" e "Numero de Casos" para focar apenas nas variáveis relevantes
dados_selecionados <- dados[, !(names(dados) %in% c("Local", "Ano", "Numero de Casos"))]
# Converter para um objeto de transações
dados_transacoes <- as(dados_selecionados, "transactions")
# Aplicar o algoritmo Apriori
# Ajuste os parâmetros conforme necessário
regras <- apriori(dados_transacoes, parameter = list(supp = 0.02, conf = 0.9))
# Ordenar as regras por suporte
regras_ordenadas <- sort(regras, by = "support", decreasing = TRUE)
# Selecionar as N regras mais relevantes
n <- 5  # Número desejado de regras
regras_filtradas <- regras_ordenadas[1:n]
# Função para simplificar os rótulos das variáveis (remover valores entre colchetes)
labels_simplificados <- function(regras) {
labels <- labels(regras)
# Remover os valores das variáveis entre colchetes (exemplo: "Populacao[92,93]" -> "Populacao")
labels <- gsub("\\[.*?\\]", "", labels)
# Remover espaços extras
labels <- trimws(labels)
return(labels)
}
# Aplicar a simplificação aos rótulos das regras filtradas
regras_filtradas@lhs@itemInfo$labels <- labels_simplificados(regras_filtradas@lhs)
regras_filtradas@rhs@itemInfo$labels <- labels_simplificados(regras_filtradas@rhs)
# Visualizar as regras no console (opcional)
inspect(regras_filtradas)
# Visualizar as regras filtradas em um gráfico de rede
plot(regras_filtradas, method = "graph", control = list(type = "items"))
library(arules)
library(arulesViz)
dados <- read.csv("base_unificada_com_casos.csv", stringsAsFactors = TRUE)
dados_selecionados <- dados[, !(names(dados) %in% c("Local", "Ano", "Numero de Casos"))]
dados_transacoes <- as(dados_selecionados, "transactions")
regras <- apriori(dados_transacoes, parameter = list(supp = 0.02, conf = 0.9))
regras_ordenadas <- sort(regras, by = "support", decreasing = TRUE)
n <- 5  # Número desejado de regras
regras_filtradas <- regras_ordenadas[1:n]
labels_simplificados <- function(regras) {
labels <- labels(regras)
# Remover os valores das variáveis entre colchetes (exemplo: "Populacao[92,93]" -> "Populacao")
labels <- gsub("\\[.*?\\]", "", labels)
# Remover espaços extras
labels <- trimws(labels)
return(labels)
}
regras_filtradas@lhs@itemInfo$labels <- labels_simplificados(regras_filtradas@lhs)
regras_filtradas@rhs@itemInfo$labels <- labels_simplificados(regras_filtradas@rhs)
inspect(regras_filtradas)
plot(regras_filtradas, method = "graph", control = list(type = "items"))
library(arules)
library(arulesViz)
dados <- read.csv("base_unificada_nigeria.csv", stringsAsFactors = TRUE)
dados_selecionados <- dados[, !(names(dados) %in% c("Local", "Ano", "Numero de Casos"))]
dados_transacoes <- as(dados_selecionados, "transactions")
regras <- apriori(dados_transacoes, parameter = list(supp = 0.02, conf = 0.9))
regras_ordenadas <- sort(regras, by = "support", decreasing = TRUE)
n <- 5  # Número desejado de regras
regras_filtradas <- regras_ordenadas[1:n]
inspect(regras_filtradas)
plot(regras_filtradas, method = "graph", control = list(type = "items"))
library(arules)
library(arulesViz)
dados <- read.csv("base_unificada_nigeria.csv", stringsAsFactors = TRUE)
dados_selecionados <- dados[, !(names(dados) %in% c("Local", "Ano", "Numero de Casos"))]
dados_transacoes <- as(dados_selecionados, "transactions")
regras <- apriori(dados_transacoes, parameter = list(supp = 0.02, conf = 0.9))
regras_ordenadas <- sort(regras, by = "confidence", decreasing = TRUE)
n <- 5  # Número desejado de regras
regras_filtradas <- regras_ordenadas[1:n]
inspect(regras_filtradas)
plot(regras_filtradas, method = "graph", control = list(type = "items"))
library(arules)
library(arulesViz)
dados <- read.csv("base_unificada_com_casos.csv", stringsAsFactors = TRUE)
dados_selecionados <- dados[, !(names(dados) %in% c("Local", "Ano"))]
dados_selecionados$Numero_de_Casos_Categorizado <- cut(
dados_selecionados$Numero.de.Casos,
breaks = quantile(dados_selecionados$Numero.de.Casos, probs = seq(0, 1, by = 0.33), na.rm = TRUE),
labels = c("Baixo", "Médio", "Alto"),
include.lowest = TRUE
)
dados_selecionados <- dados_selecionados[, !(names(dados_selecionados) %in% c("Numero.de.Casos"))]
dados_transacoes <- as(dados_selecionados, "transactions")
regras <- apriori(
dados_transacoes,
parameter = list(supp = 0.02, conf = 0.9),
appearance = list(rhs = c("Numero_de_Casos_Categorizado=Alto",
"Numero_de_Casos_Categorizado=Médio",
"Numero_de_Casos_Categorizado=Baixo"),
default = "lhs")
)
regras_ordenadas <- sort(regras, by = "confidence", decreasing = TRUE)
n <- 5  # Número desejado de regras
regras_filtradas <- regras_ordenadas[1:n]
inspect(regras_filtradas)
plot(regras_filtradas, method = "graph", control = list(type = "items"))
library(arules)
library(arulesViz)
dados <- read.csv("base_unificada_com_casos.csv", stringsAsFactors = TRUE)
dados_selecionados <- dados[, !(names(dados) %in% c("Local", "Ano"))]
dados_selecionados$Numero_de_Casos_Categorizado <- cut(
dados_selecionados$Numero.de.Casos,
breaks = quantile(dados_selecionados$Numero.de.Casos, probs = seq(0, 1, by = 0.33), na.rm = TRUE),
labels = c("Baixo", "Médio", "Alto"),
include.lowest = TRUE
)
dados_selecionados <- dados_selecionados[, !(names(dados_selecionados) %in% c("Numero.de.Casos"))]
dados_transacoes <- as(dados_selecionados, "transactions")
regras <- apriori(
dados_transacoes,
parameter = list(supp = 0.02, conf = 0.9),
appearance = list(rhs = c("Numero_de_Casos_Categorizado=Alto",
"Numero_de_Casos_Categorizado=Médio",
"Numero_de_Casos_Categorizado=Baixo"),
default = "lhs")
)
regras_ordenadas <- sort(regras, by = "lift", decreasing = TRUE)
n <- 5  # Número desejado de regras
regras_filtradas <- regras_ordenadas[1:n]
inspect(regras_filtradas)
plot(regras_filtradas, method = "graph", control = list(type = "items"))
library(arules)
library(arulesViz)
dados <- read.csv("base_unificada_com_casos.csv", stringsAsFactors = TRUE)
dados_selecionados <- dados[, !(names(dados) %in% c("Local", "Ano"))]
dados_selecionados$Numero_de_Casos_Categorizado <- cut(
dados_selecionados$Numero.de.Casos,
breaks = quantile(dados_selecionados$Numero.de.Casos, probs = seq(0, 1, by = 0.33), na.rm = TRUE),
labels = c("Baixo", "Médio", "Alto"),
include.lowest = TRUE
)
dados_selecionados <- dados_selecionados[, !(names(dados_selecionados) %in% c("Numero.de.Casos"))]
dados_transacoes <- as(dados_selecionados, "transactions")
regras <- apriori(
dados_transacoes,
parameter = list(supp = 0.02, conf = 0.9),
appearance = list(rhs = c("Numero_de_Casos_Categorizado=Alto",
"Numero_de_Casos_Categorizado=Médio",
"Numero_de_Casos_Categorizado=Baixo"),
default = "lhs")
)
regras_ordenadas <- sort(regras, by = "lift", decreasing = FALSE)
n <- 5  # Número desejado de regras
regras_filtradas <- regras_ordenadas[1:n]
inspect(regras_filtradas)
plot(regras_filtradas, method = "graph", control = list(type = "items"))
library(arules)
library(arulesViz)
dados <- read.csv("base_unificada_com_casos.csv", stringsAsFactors = TRUE)
dados_selecionados <- dados[, !(names(dados) %in% c("Local", "Ano"))]
dados_selecionados$Numero_de_Casos_Categorizado <- cut(
dados_selecionados$Numero.de.Casos,
breaks = quantile(dados_selecionados$Numero.de.Casos, probs = seq(0, 1, by = 0.33), na.rm = TRUE),
labels = c("Baixo", "Médio", "Alto"),
include.lowest = TRUE
)
dados_selecionados <- dados_selecionados[, !(names(dados_selecionados) %in% c("Numero.de.Casos"))]
dados_transacoes <- as(dados_selecionados, "transactions")
regras <- apriori(
dados_transacoes,
parameter = list(supp = 0.02, conf = 0.9),
appearance = list(rhs = c("Numero_de_Casos_Categorizado=Alto",
"Numero_de_Casos_Categorizado=Médio",
"Numero_de_Casos_Categorizado=Baixo"),
default = "lhs")
)
regras_ordenadas <- sort(regras, by = "confidence", decreasing = TRUE)
n <- 5  # Número desejado de regras
regras_filtradas <- regras_ordenadas[1:n]
inspect(regras_filtradas)
plot(regras_filtradas, method = "graph", control = list(type = "items"))
plot(regras_filtradas, method = "scatterplot", measure = c("support", "confidence"), shading = "lift")
plot(regras_filtradas, method = "graph", engine = "igraph", control = list(type = "items"))
plot(regras_filtradas, method = "matrix", measure = "lift", shading = "confidence")
plot(regras_filtradas, method = "grouped")
plot(regras_filtradas, method = "paracoord", control = list(reorder = TRUE))
n <- 10  # Número desejado de regras
regras_filtradas <- regras_ordenadas[1:n]
inspect(regras_filtradas)
plot(regras_filtradas, method = "graph", control = list(type = "items"))
library(arules)
library(arulesViz)
dados <- read.csv("base_unificada_nigeria.csv", stringsAsFactors = TRUE)
dados_selecionados <- dados[, !(names(dados) %in% c("Local", "Ano"))]
dados_selecionados$Numero_de_Casos_Categorizado <- cut(
dados_selecionados$Numero.de.Casos,
breaks = quantile(dados_selecionados$Numero.de.Casos, probs = seq(0, 1, by = 0.33), na.rm = TRUE),
labels = c("Baixo", "Médio", "Alto"),
include.lowest = TRUE
)
dados_selecionados <- dados_selecionados[, !(names(dados_selecionados) %in% c("Numero.de.Casos"))]
dados_transacoes <- as(dados_selecionados, "transactions")
regras <- apriori(
dados_transacoes,
parameter = list(supp = 0.02, conf = 0.9),
appearance = list(rhs = c("Numero_de_Casos_Categorizado=Alto",
"Numero_de_Casos_Categorizado=Médio",
"Numero_de_Casos_Categorizado=Baixo"),
default = "lhs")
)
regras_ordenadas <- sort(regras, by = "confidence", decreasing = TRUE)
n <- 10  # Número desejado de regras
regras_filtradas <- regras_ordenadas[1:n]
inspect(regras_filtradas)
plot(regras_filtradas, method = "graph", control = list(type = "items"))
library(arules)
library(arulesViz)
dados <- read.csv("base_unificada_com_casos.csv", stringsAsFactors = TRUE)
dados_selecionados <- dados[, !(names(dados) %in% c("Local", "Ano"))]
dados_selecionados$Numero_de_Casos_Categorizado <- cut(
dados_selecionados$Numero.de.Casos,
breaks = quantile(dados_selecionados$Numero.de.Casos, probs = seq(0, 1, by = 0.33), na.rm = TRUE),
labels = c("Baixo", "Médio", "Alto"),
include.lowest = TRUE
)
dados_selecionados <- dados_selecionados[, !(names(dados_selecionados) %in% c("Numero.de.Casos"))]
dados_transacoes <- as(dados_selecionados, "transactions")
regras <- apriori(
dados_transacoes,
parameter = list(supp = 0.02, conf = 0.9),
appearance = list(rhs = c("Numero_de_Casos_Categorizado=Alto",
"Numero_de_Casos_Categorizado=Médio",
"Numero_de_Casos_Categorizado=Baixo"),
default = "lhs")
)
regras_ordenadas <- sort(regras, by = "confidence", decreasing = TRUE)
n <- 10  # Número desejado de regras
regras_filtradas <- regras_ordenadas[1:n]
inspect(regras_filtradas)
plot(regras_filtradas, method = "graph", control = list(type = "items"))
plot(regras_filtradas, method = "scatterplot", measure = c("support", "confidence"), shading = "lift")
